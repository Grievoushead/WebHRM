@using Hrm.Web.Models.Menu
@{
    ViewBag.Title = "Selection";
}
@section links
{
    <link href="../../Content/kendo-ui/kendo.common.min.css" rel="stylesheet" type="text/css" />
    <link href="../../Content/kendo-ui/kendo.bootstrap.min.css" rel="stylesheet" type="text/css" />
}
@section scripts
{
    <script src="http://code.highcharts.com/highcharts.js"></script>
    <script src="http://code.highcharts.com/modules/exporting.js"></script>
    <script src="../../Scripts/kendo-ui/kendo.web.min.js" type="text/javascript"></script>
    <script src="~/Scripts/underscore-min.js"></script>
    
    <script type="text/x-kendo-template" id="toolbar">
        <div id="addSkillsToolbar" class="toolbar">
            <label class="addSkills-label" for="skills">Add skill:</label>
            <input type="search" id="skills" style="width: 150px"/>
        </div>
    </script>
    
    
    <script type="text/x-kendo-template" id="candidatesToolbar">
        <div class="toolbar">
            <button class='btn btn-primary' onclick='selectAndTestAssign()'>Select and Go to the test assigning </button>
        </div>
    </script>

    <script type="text/x-kendo-template" id="detail-row">     
        <div>
            <div class="skills"></div>
        </div>
    </script>

    <script>
        function selectAndTestAssign() {
            var grid = $("#candidatesGrid").data("kendoGrid");
            var rows = grid.select();
            var selected = [];
            rows.each(function() {
                selected.push(grid.dataItem($(this)).UserId);
            });

            if (selected.length > 0) {
                $.ajax({
                    url: '../SaveSelectedCandidates',
                    dataType: "json",
                    type: 'POST',
                    traditional: true,
                    data: { selected: selected }
                }).success(function() {
                    window.location = '../TestAssigning';
                });
            }
        }

        function add() {
            var skillsCatId = $("#skills").data("kendoDropDownList").value();
            if (skillsCatId) {
                $.ajax({
                    url: 'JobSkill/CreateGridData',
                    dataType: "json",
                    type: 'PUT',
                    data: { skillsCatId: skillsCatId },
                    success: function() {
                        $("#grid").data("kendoGrid").dataSource.read();
                        $("#skills").data("kendoDropDownList").dataSource.read();
                    }
                });
            }
        }

        function rem() {
            var grid = $("#grid").data("kendoGrid");
            grid.removeRow(grid.select());
        }


        $(function() {
            // Init by categories chart
            $.ajax({
                url: '../GetJobProfileByCategoriesChartData',
                success: function(byCatChartData) {

                    var colors = Highcharts.getOptions().colors;
                    var chartData = [];
                    $.each(byCatChartData.SkillsData, function(index, item) {
                        chartData.push({
                            y: item.CategoryAvgEstimate,
                            color: colors[index],
                            drilldown: {
                                name: item.name,
                                categories: item.Categories,
                                data: item.Data,
                                color: colors[index]
                            }
                        });
                    });

                    var categories = byCatChartData.SkillCatNames,
                        name = 'Job Profile Required Skills',
                        data = chartData;

                    function setChart(name, categories, data, color) {
                        chart.xAxis[0].setCategories(categories, false);
                        chart.series[0].remove(false);
                        chart.addSeries({
                            name: name,
                            data: data,
                            color: color || 'white'
                        }, false);
                        chart.redraw();
                    }

                    var chart = $('#byCatChart').highcharts({
                        chart: {
                            type: 'column'
                        },
                        title: {
                            text: 'Job Profile Required Skills by Categories'
                        },
                        subtitle: {
                            text: 'Click the columns to view skills. Click again to view categories.'
                        },
                        xAxis: {
                            categories: categories
                        },
                        yAxis: {
                            title: {
                                text: 'Estimation (points)'
                            }
                        },
                        plotOptions: {
                            column: {
                                cursor: 'pointer',
                                point: {
                                    events: {
                                        click: function() {
                                            var drilldown = this.drilldown;
                                            if (drilldown) { // drill down
                                                setChart(drilldown.name, drilldown.categories, drilldown.data, drilldown.color);
                                            } else { // restore
                                                setChart(name, categories, data);
                                            }
                                        }
                                    }
                                },
                                dataLabels: {
                                    enabled: true,
                                    color: colors[0],
                                    style: {
                                        fontWeight: 'bold'
                                    },
                                    formatter: function() {
                                        return this.y + ' points';
                                    }
                                }
                            }
                        },
                        tooltip: {
                            formatter: function() {
                                var point = this.point,
                                    s = this.x + ':<b>' + this.y + '  points</b><br/>';
                                if (point.drilldown) {
                                    s += 'Click to view ' + point.category + ' skills';
                                } else {
                                    s += 'Click to return to categories';
                                }
                                return s;
                            }
                        },
                        series: [{
                            name: name,
                            data: data,
                            color: 'white'
                        }],
                        exporting: {
                            enabled: false
                        }
                    })
                        .highcharts(); // return chart

                }
            });

            // Init by skills chart
            $.ajax({
                url: '../GetJobProfileBySkillsChartData',
                success: function(bySkillChartData) {


                    $('#bySkill').highcharts({
                        chart: {
                            type: 'column'
                        },
                        title: {
                            text: 'Job Profile Required Skills'
                        },
                        subtitle: {
                            text: 'List of required skills'
                        },
                        xAxis: {
                            categories: bySkillChartData.SkillNames
                        },
                        yAxis: {
                            min: 0,
                            title: {
                                text: 'Estimation (points)'
                            }
                        },
                        tooltip: {
                            headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                            pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                                '<td style="padding:0"><b>{point.y:.1f} mm</b></td></tr>',
                            footerFormat: '</table>',
                            shared: true,
                            useHTML: true
                        },
                        plotOptions: {
                            column: {
                                pointPadding: 0.2,
                                borderWidth: 0
                            }
                        },
                        series: [{
                            name: 'Job Profile',
                            data: bySkillChartData.SkillsData[0].Data
                        }]
                    });
                }
            });

            // Init job profile table
            var jobProfileGrid = $('#jobProfileGrid').kendoGrid({
                dataSource: {
                    type: "json",
                    serverPaging: true,
                    serverSorting: true,
                    serverFiltering: true,
                    pageSize: 10,
                    transport: {
                        read: { url: "../../JobSkill/GetGridData", dataType: "json", type: 'GET' },
                        destroy: { url: "../../JobSkill/DeleteGridData", dataType: "json", type: 'DELETE' }
                    },
                    schema: {
                        model: {
                            id: "Id",
                            fields: {
                                Id: { editable: false },
                                CategoryName: { type: 'string', validation: { required: true }, editable: false },
                                Description: { type: 'string', validation: { required: true }, editable: false }
                            }
                        },
                        data: "JobSkillCats",
                        total: "TotalCount"
                    }
                },                

                pageable: {
                    refresh: true,
                    pageSizes: true
                },
                sortable: true,
                filterable: true,
                editable: 'popup',
                selectable: true,
                detailTemplate: kendo.template($("#detail-row").html()),
                detailInit: detailInit,
                toolbar: [
                    { text: 'Add', template: '<button class="btn" onclick="add()"><i class="icon-file"></i> Add</button>' },
                    { text: 'Remove', template: '<button class="btn" onclick="rem()"><i class="icon-trash"></i> Delete</button>' },
                    { template: $("#toolbar").html() }
                ],

                columns: [
                    { field: "Name", title: "Category", width: 150 },
                    { field: "Description", title: "Description", width: 200 }
                ]
            });

            var dropDown = jobProfileGrid.find("#skills").kendoDropDownList({
                dataTextField: "text",
                dataValueField: "value",
                autoBind: false,
                optionLabel: "Choose...",
                dataSource: {
                    type: "json",
                    severFiltering: true,
                    transport: {
                        read: "../../JobSkill/GetSkillCategoriesForAdd"
                    }
                },
                change: function() {
                    var value = this.value();
                    if (value) {

                    } else {
                    }
                }
            });


            var candidatesGrid = $('#candidatesGrid').kendoGrid({
                dataSource: {
                    type: "json",
                    transport: {
                        read: { url: "../../JobApplication/GetGridData", dataType: "json", type: 'GET' }
                    },
                    schema: {
                        model: {
                            id: "Id",
                            fields: {
                                Id: { editable: false },
                                LastName: { type: 'string', validation: { required: true } },
                                FirstName: { type: 'string', validation: { required: true } },
                                MiddleName: { type: 'string', validation: { required: true } },
                                FilingDate: { type: "date", format: "{0:dd/MM/yyyy}", validation: { required: true } },
                                DesiredSalary: { type: 'number', validation: { min: 0 } }
                            }
                        },
                        data: "JobApplications",
                        total: "TotalCount"
                    },
                    serverPaging: true,
                    serverSorting: true,
                    serverFiltering: true,
                    pageSize: 5,
                    filter: { field: "JobId", operator: "eq", value: '@Session["JobId"]' }
                },
                editable: 'inline',
                selectable: "multiple",
                scrollable: false,
                sortable: true,
                pageable: true,
                columns: [
                    { field: "LastName", title: "Last name", width: "110px" },
                    { field: "FirstName", title: "First name", width: "110px" },
                    { field: "MiddleName", title: "Middle name", width: "110px" },
                    { field: "FilingDate", title: "Filing date", width: "110px", template: '#= kendo.toString(FilingDate, "dd/MM/yyyy" ) #' },
                    { field: "DesiredSalary", title: "Desired salary" },
                    { field: "Status", title: "Status" },
                    { command: ["destroy"], title: "&nbsp;" }
                ],
                toolbar: [
                    { template: $("#candidatesToolbar").html() }
                ],
            });
        });

        function showCandidates() {
            debugger
            var all = $('#allOption')[0];
            var hasAllReqSkillsAndNotLowerOption = $('#hasAllReqSkillsAndNotLowerOption')[0];
            var hasAllReqSkills = $('#hasAllReqSkills')[0];
            var grid = $("#candidatesGrid").data("kendoGrid");
            if (all.checked) {
                grid.dataSource.read();
            } else if (hasAllReqSkillsAndNotLowerOption.checked) {
                var reqNotLow = { field: 'ReqNotLow', operator: 'eq', value: true };
                grid.dataSource.filter().filters.push(reqNotLow);
                grid.dataSource.read();
                grid.dataSource.filter().filters = _.without(grid.dataSource.filter().filters, reqNotLow);
            } else if (hasAllReqSkills.checked) {
                var req = { field: 'Req', operator: 'eq', value: true };
                grid.dataSource.filter().filters.push(req);
                grid.dataSource.read();
                grid.dataSource.filter().filters = _.without(grid.dataSource.filter().filters, req);
            }
        }

        // JobProfileGrid detail init

        function detailInit(e) {
            var detailRow = e.detailRow;

            detailRow.find(".skills").kendoGrid({
                dataSource: {
                    type: "json",
                    transport: {
                        read: { url: "../../JobSkill/GetDetailedRowGridData", dataType: "json", type: 'GET' },
                        update: { url: "../../JobSkill/UpdateGridData", dataType: "json", type: 'POST' }
                    },
                    schema: {
                        model: {
                            id: "Id",
                            fields: {
                                Id: { editable: false },
                                Name: { type: 'string', validation: { required: true }, editable: false },
                                Description: { type: 'string', validation: { required: true }, editable: false },
                                Estimate: { type: 'number', validation: { min: 0 }, editable: true }
                            }
                        },
                        data: "Skills",
                        total: "TotalCount"
                    },
                    serverPaging: true,
                    serverSorting: true,
                    serverFiltering: true,
                    pageSize: 5,
                    filter: { field: "SkillCategoryId", operator: "eq", value: e.data.Id }
                },
                editable: 'inline',
                scrollable: false,
                sortable: true,
                pageable: true,
                columns: [
                    { field: "Name", title: "Skill", width: "200px" },
                    { field: "Description", title: "Description" },
                    { field: "Estimate", title: "Estimate", width: "110px" },
                    { command: ["edit"], title: "&nbsp;" }
                ]
            });
        }
    </script>

}

@section menu
{
    @Html.Partial("_ManagerTopMenu", ManagerTopMenuItems.MyProfile)
}

<div class="container-fluid">
    <div class="row-fluid">
        @{
            Html.RenderPartial("_ManagerLeftMenu", ManagerLeftMenuItems.Jobs);
        }
        
         <div class="span9 thumbnail well">
             <!--Body content-->
            
             <fieldset class="thumbnail">
                 <legend>Job Information</legend>
                 <dl class="dl-horizontal" style="margin-left: -60px;">
                     <dt>Job Name:</dt>
                     <dd>.Net Senior</dd>

                     <dt>Department:</dt>
                     <dd>.Net</dd>

                     <dt>Project:</dt>
                     <dd>Web Player</dd>

                     <dt>Salary:</dt>
                     <dd>1000$</dd>
                 </dl>
             </fieldset>
             
             <fieldset class="thumbnail">
                 <legend>Job Profile</legend>

                 <ul class="nav nav-tabs">
                     <li class="active">
                         <a href="#byCat" data-toggle="tab">By Categories</a>
                     </li>
                     <li>
                         <a href="#bySkill" data-toggle="tab">By Skills</a>
                     </li>
                     <li>
                         <a href="#table" data-toggle="tab">Table</a>
                     </li>
                 </ul>
                 
                 <div class="tab-content">
                     <div class="tab-pane fade active in" id="byCat">
                         <div id="byCatChart" style="min-width: 400px; height: 400px; margin: 0 auto"></div>
                     </div>
                     <div class="tab-pane fade" id="bySkill">
                         <div id="bySkillChart" style="min-width: 400px; height: 400px; margin: 0 auto"></div>
                     </div>
                     <div class="tab-pane fade" id="table">
                         <div id="jobProfileGrid"></div>
                     </div>
                </div>
                 
             </fieldset>
             
             <fieldset class="thumbnail">
                 <legend>Selection Params</legend>
                 <label class="radio">
                     <input id="allOption" type="radio" name="optionsRadios" checked>
                     All candidates
                 </label>
                 
                 <label class="radio">
                     <input id="hasAllReqSkills" type="radio" name="optionsRadios">
                     Has All Required Skills
                 </label>

                 <label class="radio">
                     <input id="hasAllReqSkillsAndNotLowerOption" type="radio" name="optionsRadios">
                     Has All Required Skills and Not Lower
                 </label>
                 
                 <button class="btn btn-primary" onclick="showCandidates()">Show</button>
             </fieldset>
             
             <fieldset class="thumbnail">
                 <legend>Candidates</legend>
                 <div id="candidatesGrid"></div>
             </fieldset>

         </div>
    </div>
</div>